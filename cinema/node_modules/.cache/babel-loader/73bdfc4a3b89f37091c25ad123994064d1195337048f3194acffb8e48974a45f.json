{"ast":null,"code":"var _jsxFileName = \"/workspaces/Cinema/cinema/src/paginas/Procurar/index.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from \"../../servicos/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const {\n    query\n  } = useParams(); // Pega a query da URL\n  const [results, setResults] = useState([]); // Armazena os resultados\n\n  useEffect(() => {\n    async function searchMovies() {\n      // Função para procurar os filmes\n      const response = await api.get(\"search/movie\", {\n        // Parâmetros para procurar os filmes\n        params: {\n          api_key: \"ce2c1fc6ee322eeefa520085c8f3880a\",\n          query: query,\n          language: \"pt-BR\",\n          page: 1\n        }\n      });\n      setResults(response.data.results); // Armazena ou altera o estado com esse novo valor\n    }\n    searchMovies();\n  }, [query]); // Executa a busca toda vez que a query mudar\n\n  // Por fim os dados são organizados e retornados abaixo\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Resultados para: \", query]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), results.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w600_and_h900_bestv2${movie.backdrop_path}`,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchResults, \"XiJjnY/lJOqqTdUcnRRGwGx45Ds=\", false, function () {\n  return [useParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["useParams","useEffect","useState","api","jsxDEV","_jsxDEV","SearchResults","_s","query","results","setResults","searchMovies","response","get","params","api_key","language","page","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","title","src","backdrop_path","alt","id","_c","$RefreshReg$"],"sources":["/workspaces/Cinema/cinema/src/paginas/Procurar/index.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from \"../../servicos/api\";\n\nfunction SearchResults() {\n    const { query } = useParams();  // Pega a query da URL\n    const [results, setResults] = useState([]); // Armazena os resultados\n\n    useEffect(() => {\n        async function searchMovies() { // Função para procurar os filmes\n            const response = await api.get(\"search/movie\", { // Parâmetros para procurar os filmes\n                params: {\n                    api_key: \"ce2c1fc6ee322eeefa520085c8f3880a\",\n                    query: query,\n                    language: \"pt-BR\",\n                    page: 1\n                }\n            });\n            setResults(response.data.results); // Armazena ou altera o estado com esse novo valor\n        }\n        searchMovies();\n    }, [query]);  // Executa a busca toda vez que a query mudar\n\n    // Por fim os dados são organizados e retornados abaixo\n    return (\n        <div>\n            <h1>Resultados para: {query}</h1>\n            {results.map((movie) => (\n                <div key={movie.id}>\n                    <h3>{movie.title}</h3>\n                    <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${movie.backdrop_path}`} alt={movie.title} />\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default SearchResults;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAE;EAChC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5CD,SAAS,CAAC,MAAM;IACZ,eAAeU,YAAYA,CAAA,EAAG;MAAE;MAC5B,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,cAAc,EAAE;QAAE;QAC7CC,MAAM,EAAE;UACJC,OAAO,EAAE,kCAAkC;UAC3CP,KAAK,EAAEA,KAAK;UACZQ,QAAQ,EAAE,OAAO;UACjBC,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MACFP,UAAU,CAACE,QAAQ,CAACM,IAAI,CAACT,OAAO,CAAC,CAAC,CAAC;IACvC;IACAE,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC,CAAC,CAAE;;EAEd;EACA,oBACIH,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,GAAI,mBAAiB,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChCd,OAAO,CAACe,GAAG,CAAEC,KAAK,iBACfpB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKM,KAAK,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBlB,OAAA;QAAKsB,GAAG,EAAE,kDAAkDF,KAAK,CAACG,aAAa,EAAG;QAACC,GAAG,EAAEJ,KAAK,CAACC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFjGE,KAAK,CAACK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAChB,EAAA,CA/BQD,aAAa;EAAA,QACAN,SAAS;AAAA;AAAA+B,EAAA,GADtBzB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}