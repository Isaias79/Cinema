{"ast":null,"code":"var _jsxFileName = \"/workspaces/React_Projeto---CINEMA/cinema/src/paginas/Home/index.js\",\n  _s = $RefreshSig$();\nimport estilo from './home.module.css';\nimport api from \"../../servicos/api\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [filmes, setFilmes] = useState([]);\n  const [termoBusca, setTermoBusca] = useState(''); // Estado para armazenar o termo de pesquisa\n  const [loading, setLoading] = useState(false); // Para mostrar carregamento enquanto a API está sendo consultada\n\n  // Função para carregar filmes de acordo com o termo de pesquisa\n  async function loadFilmes(termo) {\n    if (!termo) return; // Não faz pesquisa se o termo estiver vazio\n    setLoading(true); // Ativa o carregamento\n\n    try {\n      const response = await api.get(\"search/movie\", {\n        params: {\n          api_key: \"ce2c1fc6ee322eeefa520085c8f3880a\",\n          language: \"pt-BR\",\n          query: termo,\n          // Passa o termo de busca para a consulta\n          page: 1\n        }\n      });\n      setFilmes(response.data.results);\n    } catch (error) {\n      console.error(\"Erro ao buscar filmes:\", error);\n    } finally {\n      setLoading(false); // Desativa o carregamento\n    }\n  }\n\n  // useEffect que será acionado quando o termo de pesquisa mudar\n  useEffect(() => {\n    if (termoBusca) {\n      loadFilmes(termoBusca); // Carrega filmes de acordo com o termo\n    }\n  }, [termoBusca]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: estilo.titulo,\n      children: \"Pesquisa de Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: termoBusca,\n      onChange: e => setTermoBusca(e.target.value),\n      placeholder: \"Pesquisar filmes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filmes.length > 0 ? filmes.map(filme => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: estilo.cardFilme,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/detalhes/${filme.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: filme.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w600_and_h900_bestv2${filme.backdrop_path}`,\n          alt: filme.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: filme.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Popularidade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 32\n          }, this), \" \", filme.popularity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, filme.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum filme encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"+hq9laHfUFbkIHbOhSE35tS53B4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["estilo","api","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","filmes","setFilmes","termoBusca","setTermoBusca","loading","setLoading","loadFilmes","termo","response","get","params","api_key","language","query","page","data","results","error","console","children","className","titulo","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","length","map","filme","cardFilme","href","id","title","src","backdrop_path","alt","overview","popularity","_c","$RefreshReg$"],"sources":["/workspaces/React_Projeto---CINEMA/cinema/src/paginas/Home/index.js"],"sourcesContent":["import estilo from './home.module.css';\r\nimport api from \"../../servicos/api\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction Home() {\r\n\r\n    const [filmes, setFilmes] = useState([]);\r\n    const [termoBusca, setTermoBusca] = useState(''); // Estado para armazenar o termo de pesquisa\r\n    const [loading, setLoading] = useState(false); // Para mostrar carregamento enquanto a API está sendo consultada\r\n\r\n    // Função para carregar filmes de acordo com o termo de pesquisa\r\n    async function loadFilmes(termo) {\r\n        if (!termo) return; // Não faz pesquisa se o termo estiver vazio\r\n        setLoading(true); // Ativa o carregamento\r\n\r\n        try {\r\n            const response = await api.get(\"search/movie\", {\r\n                params: {\r\n                    api_key: \"ce2c1fc6ee322eeefa520085c8f3880a\",\r\n                    language: \"pt-BR\",\r\n                    query: termo, // Passa o termo de busca para a consulta\r\n                    page: 1\r\n                }\r\n            });\r\n            setFilmes(response.data.results);\r\n        } catch (error) {\r\n            console.error(\"Erro ao buscar filmes:\", error);\r\n        } finally {\r\n            setLoading(false); // Desativa o carregamento\r\n        }\r\n    }\r\n\r\n    // useEffect que será acionado quando o termo de pesquisa mudar\r\n    useEffect(() => {\r\n        if (termoBusca) {\r\n            loadFilmes(termoBusca); // Carrega filmes de acordo com o termo\r\n        }\r\n    }, [termoBusca]);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={estilo.titulo}>Pesquisa de Filmes</h1>\r\n            \r\n            {/* Campo de busca */}\r\n            <input\r\n                type=\"text\"\r\n                value={termoBusca}\r\n                onChange={(e) => setTermoBusca(e.target.value)}\r\n                placeholder=\"Pesquisar filmes...\"\r\n            />\r\n            \r\n            {/* Mostra carregamento enquanto a API está sendo consultada */}\r\n            {loading && <p>Carregando...</p>}\r\n\r\n            {/* Exibe os filmes encontrados */}\r\n            <div>\r\n                {filmes.length > 0 ? (\r\n                    filmes.map((filme) => (\r\n                        <div key={filme.id} className={estilo.cardFilme}>\r\n                            <a href={`/detalhes/${filme.id}`}>\r\n                                <h2>{filme.title}</h2>\r\n                            </a>\r\n                            <img \r\n                                src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${filme.backdrop_path}`} \r\n                                alt={filme.title} \r\n                            />\r\n                            <p>{filme.overview}</p>\r\n                            <p><strong>Popularidade:</strong> {filme.popularity}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Nenhum filme encontrado.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACA,eAAeW,UAAUA,CAACC,KAAK,EAAE;IAC7B,IAAI,CAACA,KAAK,EAAE,OAAO,CAAC;IACpBF,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;IAElB,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAG,CAAC,cAAc,EAAE;QAC3CC,MAAM,EAAE;UACJC,OAAO,EAAE,kCAAkC;UAC3CC,QAAQ,EAAE,OAAO;UACjBC,KAAK,EAAEN,KAAK;UAAE;UACdO,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MACFb,SAAS,CAACO,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACNZ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ;;EAEA;EACAX,SAAS,CAAC,MAAM;IACZ,IAAIQ,UAAU,EAAE;MACZI,UAAU,CAACJ,UAAU,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACIL,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAIuB,SAAS,EAAE5B,MAAM,CAAC6B,MAAO;MAAAF,QAAA,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrD5B,OAAA;MACI6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,UAAW;MAClB0B,QAAQ,EAAGC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAqB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EAGDrB,OAAO,iBAAIP,OAAA;MAAAsB,QAAA,EAAG;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGhC5B,OAAA;MAAAsB,QAAA,EACKnB,MAAM,CAACgC,MAAM,GAAG,CAAC,GACdhC,MAAM,CAACiC,GAAG,CAAEC,KAAK,iBACbrC,OAAA;QAAoBuB,SAAS,EAAE5B,MAAM,CAAC2C,SAAU;QAAAhB,QAAA,gBAC5CtB,OAAA;UAAGuC,IAAI,EAAE,aAAaF,KAAK,CAACG,EAAE,EAAG;UAAAlB,QAAA,eAC7BtB,OAAA;YAAAsB,QAAA,EAAKe,KAAK,CAACI;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACJ5B,OAAA;UACI0C,GAAG,EAAE,kDAAkDL,KAAK,CAACM,aAAa,EAAG;UAC7EC,GAAG,EAAEP,KAAK,CAACI;QAAM;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACF5B,OAAA;UAAAsB,QAAA,EAAIe,KAAK,CAACQ;QAAQ;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB5B,OAAA;UAAAsB,QAAA,gBAAGtB,OAAA;YAAAsB,QAAA,EAAQ;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACS,KAAK,CAACS,UAAU;QAAA;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GATlDS,KAAK,CAACG,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACR,CAAC,gBAEF5B,OAAA;QAAAsB,QAAA,EAAG;MAAwB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1B,EAAA,CAxEQD,IAAI;AAAA8C,EAAA,GAAJ9C,IAAI;AA0Eb,eAAeA,IAAI;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}